# This is used for sending error messages to the console
[respond]

###### M600 ######
[gcode_macro M600]
gcode:
  SET_IDLE_TIMEOUT TIMEOUT=7200 ; Increase idle timeout
  {% set X = params.X|default(150)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(20)|float %}
  # SAVE_GCODE_STATE NAME=M600_state
  {% if "_STATUS_BUSY" in printer.gcode.commands %}
      _STATUS_BUSY                                     # Sets SB-leds to busy-mode
  {% endif %}
  PAUSE X=150 Y=308 Z_MIN=50 ; Pause printing near the back
  # G91
  # G1 Z{Z} F1000
  # G90
  # G1 X{X} Y{Y} F10000
  UNLOAD_FILAMENT ; Unload filament
  # {% if "_STATUS_BUSY" in printer.gcode.commands %}
  #     _STATUS_BUSY                                     # Sets SB-leds to busy-mode
  # {% endif %}
  # RESTORE_GCODE_STATE NAME=M600_state
  {% if "_STATUS_PRINTING" in printer.gcode.commands %}
      _STATUS_PRINTING                                      # Sets SB-leds to printing-mode
  {% endif %}

###### UNLOAD_FILAMENT ######
# 
# Edit the default() value for LENGTH
# to the amount of retraction required to unload the filament
# 
# Edit the default() value for TARGET
# to the target extruder temperature used during filament change
[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set LENGTH = params.LENGTH|default(120)|float %} ; Unload length
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(260)|float %} ; Unload temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if cur_temp|int < EXTRUDER_TEMP|int %} ; If current temp is below target
    M117 Heating nozzle...
    {% if "_STATUS_HEATING" in printer.gcode.commands %}
      _STATUS_HEATING                                      # Sets SB-leds to heating-mode
    {% endif %}
    M109 S{EXTRUDER_TEMP} ; Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    # M109 S{printer.configfile.config.extruder.min_extrude_temp|int} ; Heat up to min_extrude_temp
    {% if "_STATUS_HEATING" in printer.gcode.commands %}
      _STATUS_HEATING                                      # Sets SB-leds to heating-mode
    {% endif %}
    M109 S{EXTRUDER_TEMP|int} ; Heat up to min_extrude_temp
  {% endif %}
  SAVE_GCODE_STATE NAME=unload_state
  # G91 ; Relative positioning
  # Pre-unload
  # G92 E0 #Reset Extruder
  # # G1 E5.0 F1200 
  # G1 E3.0 F1600
  # G1 E-13.14 F3000
  # Cut filament
  # SET_FILAMENT_SENSOR SENSOR=extruder_entry ENABLE=0
  _MMU_CUT_TIP
  # # Unload
  G1 E-{LENGTH} F3000
  G92 E0 #Reset Extruder
  G90 ; Absolute postitioning
  RESTORE_GCODE_STATE NAME=unload_state
  CLEAR_ACTIVE_SPOOL
  # SET_FILAMENT_SENSOR SENSOR=extruder_entry ENABLE=1


###### LOAD_FILAMENT ######
# 
# # Edit the default() value for FAST
# to the amount of extrusion required to bring the filament to
# just before it starts coming out the hotend (bowden length)
# 
# # Edit the default() value for SLOW
# to the amount of extrusion required after it reaches the hotend (purge amount)
# 
[gcode_macro LOAD_FILAMENT]
gcode:
  {% set FAST = params.FAST|default(50)|float %} ; Load length
  {% set SLOW = params.SLOW|default(50)|float %} ; Purge amount
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(260)|float %} ; Load temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if cur_temp|int < EXTRUDER_TEMP|int and params.EXTRUDER_TEMP is defined %} ; If current temp is below target
    M117 Heating nozzle...
    {% if "_STATUS_HEATING" in printer.gcode.commands %}
      _STATUS_HEATING                                      # Sets SB-leds to heating-mode
    {% endif %}
    M109 S{EXTRUDER_TEMP} ; Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    # M109 S{printer.configfile.config.extruder.min_extrude_temp|int} ; Heat up to min_extrude_temp
    {% if "_STATUS_HEATING" in printer.gcode.commands %}
      _STATUS_HEATING                                      # Sets SB-leds to heating-mode
    {% endif %}
    M109 S{EXTRUDER_TEMP}
  {% endif %}
  SAVE_GCODE_STATE NAME=load_state
  # M117  LOADING...
  SET_DISPLAY_TEXT MSG="Loading filament..."
  G91 ; Relative positioning
  G92 E0 #Reset Extruder
  G1 E10.0 F1000 ; pre-load
  G1 E{FAST} F5000 ; load up to hotend
  G4 P900 ; wait a moment
  G1 E{SLOW} F200 ; purge to change filament
  G92 E-0.8 #Reset Extruder
  G90 ; Absolute postitioning
  SET_IDLE_TIMEOUT TIMEOUT=900 ; Return idle timeout to normal
  RESTORE_GCODE_STATE NAME=load_state


# ###### PURGE ######
# # 
# # Edit the default() value for LENGTH
# # to the amount of filament you'd like to purge
# # 
# [gcode_macro PURGE]
# gcode:
#   {% set LENGTH = params.LENGTH|default(30)|float %} ; Purge length
#   ##################
#   {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
#   {% if cur_temp|int < TARGET|int and params.TARGET is defined %} ; If current temp is below target
#     M117 Heating nozzle...
#     M109 S{TARGET} ; Heat nozzle to target temperature
#   {% endif %}
#   {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
#     RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
#     # M109 S{printer.configfile.config.extruder.min_extrude_temp|int} ; Heat up to min_extrude_temp
#     M109 S{EXTRUDER_TEMP|int} ; Heat up to min_extrude_temp
#   {% endif %}
#   M117 PURGING..
#   G92 E0 #Reset Extruder
#   G91 ; Relative positioning
#   G1 E{LENGTH} F200 ; Purge 45mm of filament
#   G92 E0 #Reset Extruder
#   G90 ; Absolute postitioning
